package entidadeDAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import entidades.Aluno;
import entidades.Disciplina;
import interfaces.InterfaceDAO;
import util.Conexao;

public class DisciplinaDAO implements InterfaceDAO<Disciplina>
{

	@Override
	public boolean executaSalvarBD(Disciplina x) {
		Connection con = Conexao.conectar();

		String sql =  "insert into disciplina(nm_disciplina, nm_professor, qtd_avaliacoes) "
					+ "values(?,?,?)";

		try 
		{
			PreparedStatement stm = con.prepareStatement(sql);
			
			stm.setString(1, x.getNomeDisciplina());
			stm.setString(2, x.getNomeProfessor());
			stm.setInt(3, x.getQtdAvaliacoes());
			
			stm.execute();
		} 
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		finally
		{
			Conexao.closeConexao();
		}
		
		return true;
	}

	public boolean salvaDisciplinaBD(Disciplina d)
	{
		if (!executaSalvarBD(d))
		{
			System.out.println("DISCIPLINA NÃO FOI SALVA COM SUCESSO");
			return false;
		}
		
		System.out.println("DISCIPLINA SALVA COM SUCESSO");
		return true;
	}
	

	/*
	 * CREATE TABLE Disciplina (
    cd_disciplina integer auto_increment,
    nm_disciplina varchar(40) NOT NULL,
    nm_professor varchar(40) NOT NULL,
    qtd_avaliacoes int NOT NULL,
    PRIMARY KEY (cd_disciplina)
);
	 */
	
	@Override
	public boolean executaUpdateBD(Disciplina x) {
		String sql = "update disciplina set nm_disciplina = ?, nm_professor = ?,"
				   + "qtd_avaliacoes = ? where cd_disciplina = ?" ;
		
		PreparedStatement stm;
		try 
		{
			stm = Conexao.conectar().prepareStatement(sql);
			stm.setString(1, x.getNomeDisciplina());
			stm.setString(2, x.getNomeProfessor());
			stm.setObject(3, x.getQtdAvaliacoes());
			stm.setInt(4, x.getCodigoDisciplina());
			stm.execute();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		finally
		{
			Conexao.closeConexao();
		}
		
		return true;
	}

	public boolean alteraDadosAlunoBD()
	{
		// retorna um objeto de aluno buscado pelo id
		Disciplina disciplina = new DisciplinaDAO().retornaUmObjetoBD(5);
		disciplina.setNomeDisciplina("Algoritmos");
		
		if (!executaUpdateBD(disciplina))
		{
			System.out.println("OS DADOS DA DISCIPLINA NÃO FORAM ALTERADOS. FALHA");
			return false;
		}
		
		System.out.println("DADOS ALTERADOS SALVOS COM SUCESSO NO BANCO DE DADOS.");
		return true;
	}
	
	@Override
	public boolean executaExcluirBD(Disciplina x) {
		String sql = "delete from disciplina where cd_disciplina = ?";
		try 
		{
			PreparedStatement stm = Conexao.conectar().prepareStatement(sql);
			// consultando na coluna ID do banco o valor de id do carro recebido
			stm.setInt(1, x.getCodigoDisciplina());
			stm.execute();
		} 
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		finally
		{
			Conexao.closeConexao();
		}
		return true;
	}

	@Override
	public Disciplina retornaUmObjetoBD(int id) {
		Disciplina disciplina = new DisciplinaDAO().retornaUmObjetoBD(id);
		
		if (new AlunoDAO().executaExcluirBD(disciplina)) 
		{
			System.out.println("ALUNO EXCLUÍDO COM SUCESSO.");
			return true;
		}
		else
		{
			System.out.println("FALHA NA EXCLUSÃO DO ALUNO.");
			return false;
		
	}

	@Override
	public List<Disciplina> retornarTodosBD() {
		// TODO Auto-generated method stub
		return null;
	}

}
