package entidades;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.LocalDate;

import uteis.ConexaoBancoDados;

public class Cliente 
{
	private String nome;
	private Date dataNascimento;
	private int cpf;
	private String nomeMunicipio;
	
	public Cliente(String nome, Date dataNascimento, int cpf, String nomeMunicipio)
	{
		this.setNome(nome);
		this.setDataNascimento(dataNascimento);
		this.setCpf(cpf);
		this.setNomeMunicipio(nomeMunicipio);
	}
	public String getNome() {
		return nome;
	}
	public void setNome(String nome) {
		this.nome = nome;
	}
	public Date getDataNascimento() 
	{
		return dataNascimento;
	}
	public void setDataNascimento(Date dataNascimento) {
		this.dataNascimento = dataNascimento;
	}
	public int getCpf() {
		return cpf;
	}
	public void setCpf(int cpf) {
		this.cpf = cpf;
	}
	public String getNomeMunicipio() {
		return nomeMunicipio;
	}
	public void setNomeMunicipio(String nomeMunicipio) {
		this.nomeMunicipio = nomeMunicipio;
	}
	public boolean salvarCarroBd() 
	{
		Connection conexao = ConexaoBancoDados.getConexao();

		String sql =  "insert into cliente(nm_cliente, dt_nascimento, nr_cpf, nm_municipio) values(?,?,?)";
		
		// tratar exceção
		try 
		{
			// cria um objeto de prepared Statement
			PreparedStatement stm = conexao.prepareStatement(sql);

			stm.setString(1, this.getNome());
			stm.setDate(2, this.getDataNascimento());
			stm.setInt(3, this.getCpf());
			stm.setString(4, this.getNomeMunicipio());
			
//			comando execute finaliza a transação no banco
			stm.execute();
		} 
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		
		return true;
	}
}
